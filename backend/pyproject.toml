[project]
name = "menoo"
version = "0.1.0"
description = "Lightweight recipe management system"
requires-python = ">=3.11"
dependencies = [
    "litestar[standard]",
    "sqlalchemy[asyncio]",
    "alembic",
    "aiosqlite",
    "pydantic",
    "pydantic-settings",
    "python-dotenv",
    "structlog",
    "httpx",
    "marvin",
    "openai",
    "aiolimiter",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-benchmark",
    "pytest-xdist",
    "pytest-timeout",
    "httpx",
    "respx",
    "hypothesis",
    "faker",
    "ruff",
    "mypy",
    "bandit[toml]",
    "pip-audit",
    "tox",
    "pre-commit",
    "pyupgrade",
]

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "."}
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]
namespaces = false

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__
"tests/*" = ["ARG", "S101"]  # allow unused args and asserts in tests

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "marvin.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "respx.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow-running tests",
]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]  # B101: assert_used (OK in tests), B601: paramiko (not used)

[tool.bandit.assert_used]
exclude = ["*/tests/*"]
