name: Frontend CI

on:
  push:
    branches: [main, develop]
    paths:
      - "frontend/**"
      - "backend/app/**"
      - "backend/app/**/*.py"
      - ".github/workflows/frontend-ci.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "frontend/**"
      - "backend/app/**"
      - "backend/app/**/*.py"
      - ".github/workflows/frontend-ci.yml"

jobs:
  quality:
    name: Frontend Quality Gates
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Run stable unit/integration specs
        run: npx vitest run src/test/utils.test.tsx src/features/suggestions/components/SuggestionList.test.tsx src/features/suggestions/__tests__/suggestions-integration.test.tsx

  e2e-smoke:
    name: Playwright Smoke Tests
    runs-on: ubuntu-latest
    needs: quality
    env:
      OPENAI_API_KEY: test-ci-key
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: backend/pyproject.toml

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev]"

      - name: Start backend API
        working-directory: ./backend
        run: |
          uvicorn app.main:app --port 8000 --log-level warning &
          echo $! > ../backend_server.pid

      - name: Wait for backend readiness
        run: npx wait-on http://127.0.0.1:8000/healthz
        working-directory: ./frontend

      - name: Run Playwright smoke suite
        working-directory: ./frontend
        env:
          PLAYWRIGHT_BASE_URL: http://127.0.0.1:5173
        run: npm run e2e -- smoke.spec.ts

      - name: Stop backend API
        if: always()
        run: |
          if [ -f backend_server.pid ]; then
            kill $(cat backend_server.pid) || true
            rm backend_server.pid
          fi

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-smoke-report
          path: frontend/playwright-report
          retention-days: 7
